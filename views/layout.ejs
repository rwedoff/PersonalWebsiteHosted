<!DOCTYPE html>
<html>
  <head>
    <title><%= sails.config.appName %></title>
    <link rel="icon" href="images/favicon.ico" type="image/x-icon">
    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="author" content="Ryan Wedoff">
    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/bootstrap.css">
    <link rel="stylesheet" href="/styles/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/full-width-pics.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->
  </head>

  <body class="page-background">
    <!-- Navigation -->
    <nav class="navbar navbar-fixed-top nav-color" role="navigation">
        <div class="container">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header ">
                <button type="button" class="navbar-toggle nav-text" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" >
                    <span class="glyphicon glyphicon-menu-hamburger nav-text"></span>
                </button>
                <a href="/">
                	<img class="navbar-brand" src="images/Logo.svg" alt="Ryan Wedoff">
                </a>
            </div>
            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav ">
                    <li>
                        <a class="nav-text" href="/about">About</a>
                    </li>
                    <li>
                        <a class="nav-text" href="/work">Work</a>
                    </li>
                    <li>
                        <a class="nav-text" href="/music">Music</a>
                    </li>
                </ul>
            </div>
            <!-- /.navbar-collapse -->
        </div>
        <!-- /.container -->
    </nav>

    <%- body %>

    
  		  <!-- Modal -->
		<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
		  <div class="modal-dialog modal-lg" role="document">
			<div class="modal-content">
		  		<div class="modal-header">
          			<button type="button" class="close" data-dismiss="modal">&times;</button>
        		</div>			  
			  <div class="modal-body">
				<img src="" class="imagepreview" style="width: 100%;" >
			  </div>
			  
			</div>
		  </div>
		</div>

      <!-- Fixed Height Image Aside -->
    <!-- Image backgrounds are set within the full-width-pics.css file. -->
    <!-- Content Section -->
    <!-- Footer -->
    <footer>
        <div class="container">
		<div class="row">
			<ul>
            	<li class="social-icons">
            		<a href="https://github.com/rwedoff"><img src="images/github.svg" alt="GitHub"></a>
            	</li>
            	<li class="social-icons">
            		<a href="https://www.linkedin.com/in/ryan-wedoff-b8450980/" alt="LinkedIn"><img src="images/linkedin.svg"></a>
            	</li>
            	<li class="social-icons">
            		<a href="https://www.facebook.com/rwedoff" alt="Facebook"><img src="images/facebook.svg"></a>
            	</li>
            	<li class="social-icons">
            		<a href="mailto:rwedoff@outlook.com" alt="Email"><img src="images/email.svg"></a>
            	</li>
            </ul>   	
         </div>
          <!-- /.row -->
        </div>
        <!-- /.container -->
    </footer>


    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->
  <!-- jQuery -->
    <script src="/js/dependencies/jquery.js"></script>

    <!-- Bootstrap Core JavaScript -->
    <script src="/js/dependencies/bootstrap.min.js"></script>
    <script src="/js/image-modal.js"></script>
 
  </body>
</html>
